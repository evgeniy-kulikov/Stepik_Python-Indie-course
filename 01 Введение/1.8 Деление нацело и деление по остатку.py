# 1.8 Деление нацело и деление по остатку
""""""

"""
Напишите программу, которая найдет сколько полных килограмм умещается в заданное число грамм.
Input:  3456
Output: 3
"""
n = int(input())
rez = n // 1000
print(rez)


"""
n школьников делят k яблок поровну, неделящийся остаток остается в корзинке. 
Сколько яблок достанется каждому школьнику? 
Программа получает на вход сперва число n, а потом k.
Input:  5
        11
Output: 2
"""
n, k = int(input()), int(input())
rez = k // n
print(rez)


"""
У вас есть N рублей и вы хотите купить максимальное количество пар кроссовок по цене R рублей. 
Сколько пар кроссовок Вы можете себе купить?
На вход программе поступают два натуральных числа N и R
Input:  120
        41
Output: 2
"""
n, k = int(input()), int(input())
rez = n // k
print(rez)


"""
Программе поступает на вход одно целое положительное число, ваша задача вывести его последнюю цифру
Input:  123
Output: 3
"""
n = int(input())
rez = n % 10
print(rez)


"""
Дано целое положительное число, ваша задача вывести РАЗРЯД сотен этого числа
Input:  56789
Output: 7

Input 2:  54
Output 2: 0
"""
n = int(input())
rez = n // 100 % 10
print(rez)

"""
Дано целое положительное трехзначное число, ваша задача найти сумму разрядов этого числа
Input:  123
Output: 6
"""
n = int(input())
n1 = n % 10
n2 = n // 10 % 10
n3 = n // 100
rez = n1 + n2 + n3
print(rez)


"""
У Олега в банке есть n евро. Он хочет снять всю сумму наличными. 
Номиналы еврокупюр равны 1, 5, 10, 20, 100. 
Какое минимальное число купюр должен получить Олег после того, как снимет все деньги? 
На вход программе поступает одно положительные целое число n.
Input:  125
Output: 3
"""
n = int(input())
cnt = 0
while n:
    if n > 100:
        cnt += n // 100
        n %= 100
    elif 20 <= n < 100:
        cnt += n // 20
        n %= 20
    elif 10 <= n < 20:
        cnt += n // 10
        n %= 10
    elif 5 <= n < 10:
        cnt += n // 5
        n %= 5
    elif 0 < n < 5:
        cnt += n
        break
print(cnt)

# Отличное решение!
n = int(input())
rez = 0
for i in [100, 20, 10, 5, 1]:
    rez += n // i
    n %= i
print(rez)

# Хорошее решение
n = int(input())
nom =[100, 20, 10, 5, 1]
sum_nom = 0
while n:
    for el in nom:
        temp = n // el
        if temp > 0:
            sum_nom += temp
            n = n % el
print(sum_nom)


"""
Дано натуральное число n. 
С начала суток прошло n минут. 
Определите, сколько часов и минут будут показывать электронные часы в этот момент.
Программа должна вывести два числа: количество часов (от 0 до 23) и количество минут (от 0 до 59).
Примечание: число n может быть больше, чем количество минут в сутках.
Input:  137
Output: 2 17

Input:  1511
Output: 1 11
"""
n = int(input()) % 1440 # В сутках 1440 минут. Оставляем минуты только в последних сутках
hour = n // 60 # Получаем часы в текущих сутках
minutes = n % 60 # Получаем минуты в текущих сутках
print(hour, minutes)


"""
Дано целое число n. Выведите следующее за ним четное число.
Задачу необходимо решить целочисленными операциями без использования условных операторов и\или циклов.
Input:  5
Output: 6
"""
n = int(input())
even = n // 2 * 2 + 2
print(even)


"""
Электронные часы показывают время в формате h:mm:ss, 
то есть сначала записывается количество часов в диапазоне от 0 до 23, 
потом обязательно двузначное количество минут, 
затем обязательно двузначное количество секунд. 
Количество минут и секунд при необходимости дополняются до двузначного числа нулями.
Программа получает на вход число n - количество секунд, которое прошло с начала суток.
Выведите показания часов, соблюдая формат.
Input:  3721
Output: 1:02:01
"""
n = int(input())
hour = n // 3600
minutes = n // 60 % 60
seconds = n % 60
print(f"{hour}:{minutes:02}:{seconds:02}")  # "seconds:02" добавление "0" перед числом если его разряд меньше 2-х

# 3.3 Вложенный оператор if
""""""

# Вы можете вкладывать один условный оператор внутрь другого
a = int(input())
if a % 2 == 0:
  if a % 5 == 0:
    print(a, 'делится на 2 и на 5')
  else:
    print(a, 'делится на 2, но не на 5')
else:
  print(a, 'не делится на 2')

# вложенный условный оператор можно также и записывать внутри блока else
a = int(input())
if a % 2 == 0:
  if a % 5 == 0:
    print(a, 'делится на 2 и на 5')
  else:
    print(a, 'делится на 2, но не на 5')
else:
  if a % 5 == 0:
    print(a, 'не делится на 2,но делится на 5')
  else:
    print(a, 'не делится на 2 и не делится на 5')


# количество вложенных условных операторов в вашей программе может быть сколько угодно
# найдем минимальное значение из трех введенных чисел при помощи вложенных условий
a = int(input())
b = int(input())
c = int(input())
if a < b:
    if a < c:
        print(a)
    else:
        print(c)
else:
    if b < c:
        print(b)
    else:
        print(c)


# используем тройную вложенность для определения остатка числа при делении на 4
a = int(input())
if a % 4 == 0:
    print('остаток 0')
else:
    if a % 4 == 1:
        print('остаток 1')
    else:
        if a % 4 == 2:
            print('остаток 2')
        else:
            print('остаток 3')


# ******************   TASKS   ****************************

"""
необходимо сравнить два целых числа A и B. 
Они поступают на вход программе отдельно в каждой строке.
Ваша задача вывести символ:
<, если A меньше B, 
>, если A больше B и 
=, если A=B.
Input:  5
        9
Output: <
"""
a, b = int(input()), int(input())
if a != b:
    if a < b:
        print("<")
    else:
        print(">")
else:
    print("=")


"""
Даны три целых числа, каждое записано в отдельной строке.
Нужно вывести значение наибольшего из данных чисел
Input:  5
        7
        21
Output: 21
"""
a, b, c = int(input()), int(input()), int(input())
if a > b:
    if a > c:
        print(a)
    else:
        print(c)
else:
    if b > c:
        print(b)
    else:
        print(c)


"""
На сколько нужно  минимально разрезать торт на N равных частей. 
Следует учесть, что разрезы торта можно производить как по радиусу, так и по диаметру.
Программа получает на вход натуральное число N – число гостей, включая самого виновника торжества
Input:  2
Output: 1
"""
n = int(input())
if n == 1:
    rez = 0
elif n % 2 == 0:
    rez = n // 2
else:
    rez = n
print(rez)



"""
В отделе работают 3 сотрудника, которые получают заработную плату в рублях. 
Требуется определить: на сколько зарплата самого высокооплачиваемого из них 
отличается от самого низкооплачиваемого. Гарантируется ,что все зарплаты различны.
Функциями min и max, а также сортировками пользоваться нельзя.
Input:  100 500 1000
Output: 900
"""
a, b, c = map(int, input().split())
if a > b and a > c:
  if b < c:
    print(a - b)
  if c < b:
    print(a - c)
if b > a and b > c:
  if a < c:
    print(b - a)
  if c < a:
    print(b - c)
if c > a and c > b:
  if a < b:
    print(c - a)
  if b < a:
    print(c - b)

#  Вариант
a,b,c = map(int,input().split())

if a < b:
    a, b = b, a
if a < c:
    a, c = c, a
if b < c:
    b, c = c, b
print(a - c)



"""
Сравнить две строки равной длины, состоящие из больших и маленьких букв латинского алфавита.
Длина строк находится в пределах от 1 до 100 включительно. 
Гарантируется, что строки имеют одинаковую длину, 
а также состоят из больших и маленьких букв латинского алфавита.
Если первая строка меньше второй, выведите «-1». 
Если вторая строка меньше первой, выведите «1». 
Если строки равны, выведите «0». 
Учтите, что регистр букв не учитывается при сравнении.
Input:  aaaa    abcdefg     abs
        aaaA    AbCdEfF     Abz
Output: 0       1           -1
"""
a, b = input(), input()
if a.lower() > b.lower():
    print(1)
elif a.lower() < b.lower():
    print(-1)
else:
    print(0)

# Вариант
a, b = input().lower(), input().lower()
print(int(a > b) - int(b > a))



"""
«Кнопочные гонки». 
Во время соревнования необходимо ввести текст из s символов. 
Первый участник набирает один символ за v1 миллисекунд и имеет пинг t1 миллисекунд. 
Второй участник набирает один символ за v2 миллисекунд и имеет пинг t2 миллисекунд.

При соединении с пингом (задержкой) в t миллисекунд соревнование проходит для участника следующим образом:
Ровно через t миллисекунд после начала соревнования участник получает текст, который необходимо ввести.
Сразу после этого он начинает вводить этот текст.
Ровно через t миллисекунд после того, как он перепечатал весь текст, сайт получает информацию об этом.
Победителем в соревновании является тот участник, информация об успехе которого пришла раньше. 
Если информация пришла от обоих участников одновременно, считается, что произошла ничья.
Input:  5 1 2 1 2      3 3 1 1 1         4 5 3 1 5
Output: First          Second            Friendship
"""
s, v1, v2, t1, t2 = map(int, input().split())
user1 = s * v1 + 2 * t1
user2 = s * v2 + 2 * t2
if user1 < user2:
    print("First")
elif user1 > user2:
    print("Second")
else:
    print("Friendship")

# Вариант
s, v1, v2, t1, t2 = map(int, input().split())
user1 = s * v1 + 2 * t1
user2 = s * v2 + 2 * t2
print('First' * (user1 < user2) + 'Second' * (user1 > user2) + 'Friendship' * (user1 == user2))



"""
При игре в "Города" игроки по очереди называют названия городов так, 
чтобы первая буква каждого нового слова совпадала с последней буквой предыдущего. 
При этом считают, что если последняя буква предыдущего слова — мягкий знак, 
то с первой буквой следующего слова надо сравнивать букву, предшествующую мягкому знаку.

Напишите программу, которая считывает подряд две строки, после чего выводит «Good», 
если последний символ первой строки совпадает с первым символом второй (с учётом правила про мягкий знак), 
и «Bad» в противном случае.
Input:  Лондон      Тверь
        Норильск    Роттердам
Output: Good        Good
"""
s1, s2 = input().lower(), input().lower()
if s1[-1] != "ь":
    end_s1 = s1[-1]
else:
    end_s1 = s1[-2]
print("Good" if end_s1 == s2[0] else "Bad")

# Вариант
s1, s2 =input().lower().replace('ь',''), input().lower()
print('Good' if s1[-1] == s2[0] else 'Bad')


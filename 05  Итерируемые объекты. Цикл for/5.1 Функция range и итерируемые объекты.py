# 5.1 Функция range и итерируемые объекты
""""""

"""
Вызов range c одним параметром
"""
range(5)
# По умолчанию отчет идет от '0' Это первый параметр, который в данном случае можно не передавать
# list(range(5))  ==  list(range(0, 5))
list(range(5))  # [0, 1, 2, 3, 4]

# Нельзя передать в функцию два параметра, в которых первый будет больше, чем второй.
# В таком случае мы так же получим пустую последовательность.
# Потому что range по умолчанию пытается создать возрастающую арифметическую прогрессию,
# в которой следующее значение всегда больше предыдущего на 1.
# list(range(-5))  ==  list(range(0, -5))   Между  0 и -5 нет возрастающего числового ряда
list(range(-5))  # []

"""
Вызов range c двумя параметрами
В таком случае первое число говорит о том, откуда будет начинаться отсчёт, 
а второе – где он будет заканчиваться (не включительно!)
"""
list(range(5, 10))  # [5, 6, 7, 8, 9]


"""
Вызов range c тремя параметрами
Повлиять на возрастание или убывание последовательности можно при помощи третьего параметра. 
Он влияет на шаг арифметической последовательности, т.е. на разницу между элементами.
"""

list(range(1, 10, 2))  # [1, 3, 5, 7, 9]
list(range(10, 1, -1))  # [10, 9, 8, 7, 6, 5, 4, 3, 2]
list(range(10, 1, -2))  # [10, 8, 6, 4, 2]
list(range(1, 10, -1))  # []


"""
Операции с  range
"""
sum(range(1, 11))  # Получим: 55

len(range(1, 10, 2))  # Получим: 5

# Можно использовать в конструкции множественного присвоения
a, b, c = range(1, 10, 3)  # a, b, c = 1, 4, 7

# Результат функции можно сохранить в переменную
r = range(1, 6)
len(r)  # 5
# обратиться к её элементу по индексу
r[1] # Получим: 2

# объект range() является итерируемым объектом
iter(range(5))  # <range_iterator object at 0x0000021B383D3CB0>

v = iter(range(3))
print(next(v))  # 0
print(next(v))  # 1
print(next(v))  # 2
print(next(v))  # ошибка StopIteration



#  *  *  *   Задачи   *  *  *


# Отложенные решения на отпуск (26)
# https://stepik.org/lesson/296959/step/3?unit=278687
"""
Допишите программу так, чтобы она печатала на экран список, 
содержащий последовательность чисел 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
Input:  print(list(range( )))
Output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
"""
ls = list(range(10))
print(ls)


# Отложенные решения на отпуск (27)
# https://stepik.org/lesson/296959/step/7?unit=278687
"""
Допишите программу так, чтобы она печатала на экран последовательность чисел от 12 до 34 включительно
Input:  print(list(range( )))
Output: [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
"""
ls = list(range(12, 35))
print(ls)


# Отложенные решения на отпуск (28)
# https://stepik.org/lesson/296959/step/10?unit=278687
"""
Допишите программу так, чтобы она печатала на экран последовательность чисел от 25 до 169 включительно
Input:  print(list(range( )))
Output: [25, 33, 41, 49, 57, 65, 73, 81, 89, 97, 105, 113, 121, 129, 137, 145, 153, 161, 169]
"""
ls = list(range(25, 170, 8))
print(ls)


# Отложенные решения на отпуск (29)
# https://stepik.org/lesson/296959/step/12?unit=278687
"""
Сформируйте последовательность -11, -12, -13, -14 .... , -35
Input:  print(list(range( )))
Output: [-11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, 
         -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35]
"""
ls = list(range(-11, -36, -1))
print(ls)


# Отложенные решения на отпуск (30)
# https://stepik.org/lesson/296959/step/13?unit=278687
"""
Сформируйте последовательность 10, 9, 8, 7, ... , 0
Input:  print(list(range( )))
Output: [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
"""
ls = list(range(10, -1, -1))
print(ls)


# Отложенные решения на отпуск (31)
# https://stepik.org/lesson/296959/step/14?unit=278687
"""
Сформируйте последовательность 1000, 950, 900, 850, ... , 500
Input:  print(list(range( )))
Output: [1000, 950, 900, 850, 800, 750, 700, 650, 600, 550, 500]
"""
ls = list(range(1000, 499, -50))
print(ls)


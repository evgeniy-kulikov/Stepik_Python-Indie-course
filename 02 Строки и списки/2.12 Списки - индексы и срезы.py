# 2.12 Списки: индексы и срезы
""""""
"""
a = [34, 23, 12, 28, 9, 15]
print(a[2:4])       >>> [12, 28]
print(a[:4])        >>> [34, 23, 12, 28]
print(a[2::2])      >>> [12, 9]
print(a[::3])       >>> [34, 28]
print(a[::-1])      >>> [15, 9, 28, 12, 23, 34]


Cписок является изменяемым объектом
a = [34, 23, 12, 28, 9, 15]
a[2] = 123
print(a)  # => [34, 23, 123, 28, 9, 15]

a[3:5] = [23, 34]
print(a)  # => [34, 23, 123, 23, 34, 15]

a[1:5] = 23, 34
print(a)  # => [34, 23, 34, 15]



С помощью функции del вы можете удалять какой-либо элемент по индексу. 
a = [34, 23, 12, 28, 9, 15]
del a[2]
print(a)  # => [34, 23, 28, 9, 15]
"""

"""
Вы можете присваивать списки друг другу. 
Но в таком случае при изменении одного списка будет меняться и другой. 
Причина в том, что Python хранит в переменных ссылки на объекты. 
В примере ниже переменные a и b будут ссылаться на один и тот же объект 
и все изменения которые вы будете производить с одной переменной будут также влиять и на другую.

a = [34, 23, 12, 28, 9, 15]
b = a
print(a)  # => [34, 23, 12, 28, 9, 15]
print(b)  # => [34, 23, 12, 28, 9, 15]


b[0] = 999
print(a)  # => [999, 23, 12, 28, 9, 15]
print(b)  # => [999, 23, 12, 28, 9, 15]


Чтобы избежать такой ситуации вы должны будете делать копию списка:
a = [34, 23, 12, 28, 9, 15]
b = a[:]
print(a)  # => [34, 23, 12, 28, 9, 15]
print(b)  # => [34, 23, 12, 28, 9, 15]


b[0] = 999
print(a)  # => [34, 23, 12, 28, 9, 15]
print(b)  # => [999, 23, 12, 28, 9, 15]

a[0] = 111
print(a)  # => [111, 23, 12, 28, 9, 15]
print(b)  # => [999, 23, 12, 28, 9, 15]
"""

# 3.5 Оператор Switch
""""""

"""
!!!  Оператор match-case работать будет только начиная с  версии python3.10   !!!
"""

"""
Во многих других языках программирования имеется оператор switch-case, 
который по переданному значению ищет первое совпадение с перечисленными значениями.
Оператор switch проверяет значение переменной n на несколько значений (блоки case) поочередно. 
Как только найдется первое совпадение, выполнится  соответствующий println и мы выйдем за пределы оператора switch, 
при этом остальные блоки выполнены не будут.

По сути оператор switch-case можно использовать как аналог if-elif-elif-...-else

Оператор switch-case в python
Оператор switch появился в python совсем недавно, только начиная с версии python3.10. 
И здесь он называется оператором сопоставления с шаблонами (pattern matching statement) и 
соответственно используется связка операторов не switch-case, а match-case.

Оператор match-case имеет следующий синтаксис:

match value:
  case <pattern_1>:
    <action_1>
  case <pattern_2>:
    <action_2>
  case <pattern_3>:
    <action_3>
  case _:
    <action_wildcard>
    
После ключевого слова match указывается значение, которое нужно проверить на соответствие шаблону. 
В блоках case указываются сами шаблоны и проверка осуществляется сверху вниз, пока не найдется совпадение. 
Обычно в самом низу ставят блок действий по умолчанию, 
он выполняется в том случае, когда не найдется ни один из шаблонов.

Стоит обратить внимание, что в операторе match-case всегда проверяется значение на равенство шаблону (оператор ==) 
и других проверок и сравнений сделать не получится. 
Если вам необходимо написать сложное условие, то используйте if-elif-else
"""

"""
Для того, чтобы сравнить на несколько значений в одном блоке case, 
необходимо перечислить значения при помощи оператора |

digit = int(input("Введите цифру: "))
match digit:
    case 0 | 3 | 6 | 9:
        print("Без остатка делятся на 3")
    case 1 | 4 | 7:
        print("При делении на 3 дают остаток 1")
    case 2 | 5 | 8:
        print("При делении на 3 дают остаток 2")
    case  _:
        print(f"{digit} не является цифрой")
"""

"""
Использование методов в операторе match-case
Можете вызывать методы объекта внутри оператора match-case

direction = 'NoRtH'
match direction.lower():
  case "north" | "east" | "south" | "west":
      print("Хорошо, я пошел!")
  case _:
      print("Неизвестное направление...")
"""

"""
можно проверить переменную value на принадлежность к определенному типу

value = [1, 2, 3]

match value:
    case int() | float():
        print("Имеем дело с числом")
    case str():
        print("Имеем дело со строкой")
    case list():
        print("Имеем дело со списком")
    case  _:
        print(f"Лучше с этим дел не иметь")
"""

#  *  *  *   Задачи   *  *  *
"""
Ранее студенты технических специальностей университета учились 5 лет (специалитет) и затем им вручался аттестат. 
Программа программа будет получать на вход целое число - номер курса, 
и в зависимости от номера выводить следующий текст

если ввели 1, выведите сообщение Совсем еще зеленый студентик
если ввели 2, выведите сообщение Джун-студент
если ввели 3, выведите сообщение Мидл-студент
если ввели 4, выведите сообщение Сеньер-студент
если ввели 5, выведите сообщение Босс качалки
при вводе остальных значений, выведите текст Неизвестный курс
"""
course = input()
match course:
    case '1':
        print('Совсем еще зеленый студентик')
    case '2':
        print('Джун-студент')
    case '3':
        print('Мидл-студент')
    case '4':
        print('Сеньер-студент')
    case '5':
        print('Босс качалки')
    case _:
        print('Неизвестный курс')


"""
Программа получает на вход номер месяца - натуральное число N (1 ≤ N ≤ 12) 
и в зависимости от его значения выводит количество дней в месяце. 
Будем считать, что год невисокосный.
"""
month = int(input())
match month:
    case 2:
        print(28)
    case 4 | 6 | 9 | 11:
        print(30)
    case 1 | 3 | 5 | 7 | 8 | 10 | 12:
        print(31)
    case _:
        print('Неизвестный номер месяца')


"""
Программа ваша получает на вход строку - название знака зодиака 
и затем сообщает к какому типу относится введенный знак. 
Логика определения следующая:
если введут любое из значений Овен, Лев, Стрелец, то программа выводит текст Огненный
если введут любое из значений Телец, Дева, Козерог, то программа выводит текст Земной
если введут любое из значений Близнецы, Весы, Водолей, то программа выводит текст Воздушный
если введут любое из значений Рак, Скорпион, Рыбы, то программа выводит текст Водный
"""
zodiac = input()
match zodiac:
    case "Овен" | "Лев" | "Стрелец":
        print("Огненный")
    case "Телец" | "Дева" | "Козерог":
        print("Земной")
    case "Близнецы" | "Весы" | "Водолей":
        print("Воздушный")
    case "Рак" | "Скорпион" | "Рыбы":
        print("Водный")
    case _:
        print('Неизвестный знак зодиака')



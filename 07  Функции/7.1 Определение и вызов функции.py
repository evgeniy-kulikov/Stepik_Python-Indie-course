#  7.1 Определение и вызов функции
""""""


#
#  *  *  *   Задачи   *  *  *
#


# 01
def keanu_reeves():
    print("YOU'RE BREATHTAKING")

# 02
def say_hello_world(name):
    print(f'{name} говорит hello world!')


# 03
"""
Напишите функцию summa_n, которая принимает одно целое положительное t число и находит сумму всех чисел от 1 до t
Input:  5
Output: Я знаю, что сумма чисел от 1 до 5 равна 15
"""
def summa_n(n):
    print(f'Я знаю, что сумма чисел от 1 до {n} равна {sum(range(1, n + 1))}')

# n = int(input())
# summa_n(n)


# 04
"""
Напишите функцию exponentiation, 
которая принимает на вход целое число и выводит на экран через пробел квадрат и куб этого числа. 
Input:  3
Output: 9 27
"""
def exponentiation(n):
    print(n ** 2, n ** 3)


# 05
"""
Напишите функцию sum_num для суммирования всех цифр строки.
Функция должна принимать строку, суммировать все ее символы, которые являются цифрами,
и в качестве ответа выводить найденную сумму.
Input:  123QwertY321
Output: 12
"""
def sum_num(s: str):
    res = [int(el) for el in s if el.isdigit()]
    print(sum(res))


# 06
"""
Напишите функцию get_body_mass_index, 
которая принимает массу тела человека в кг и рост в см и рассчитывает индекс массы
index = масса / рост ** 2     (Рост указывается в метрах)
если индекс < 18.5 программа должна вывести Недостаточная масса тела
если 18.5 <= индекс <= 25 программа должна вывести Норма
если индекс > 25 программа должна вывести Избыточная масса тела
Input:  70 170
Output: Норма
"""
def get_body_mass_index(m, h):
    index = m / ((h / 100) ** 2)
    if index < 18.5:
        print('Недостаточная масса тела')
    elif index > 25:
        print('Избыточная масса тела')
    else:
        print('Норма')

# Вариант
def get_body_mass_index(m, h):
    ind = m/((h * 0.01) ** 2)
    print('Недостаточная масса тела' if ind < 18.5 else 'Избыточная масса тела' if ind > 25 else 'Норма')


# 07
"""
Напишите функцию check_password, которая проверяет переданный ей пароль на сложность.
Сложным паролем будет считаться комбинация символов, в которой :
Есть хотя бы 3 цифры
Есть хотя бы одна заглавная буква 
Есть хотя бы один символ из следующего набора "!@#$%*"
Общая длина не менее 10 символов
Если пароль прошел все проверки, 
функция должна вывести на экран фразу "Perfect password", 
в противном случае - "Easy peasy"
Input:  qwerty
Output: Easy peasy
"""
def check_password(pwd: str):
    flag_up, flag_symb, num = False, False, 0
    if len(pwd) > 9:  # (10 символов включительно)
        for el in pwd:
            if el in "!@#$%*":
                flag_symb = True
            elif el.isupper():
                flag_up = True
            elif el.isdigit():
                num += 1
    if flag_up * flag_symb * num > 2:
        print('Perfect password')
    else:
        print('Easy peasy')


# 08
"""
Создайте функцию count_letters, 
которая принимает на вход фразу и подсчитывает, 
какое количество в ней строчных(K) и заглавных (N) букв, все остальные символы игнорируются. 
Функция должна вывести на экран информацию о найденных буквах в определенном формате. 
Количество заглавных символов: N
Количество строчных символов: K
Input:  Привет, Старина
Output: Количество заглавных символов: 2
        Количество строчных символов: 11
"""
def count_letters(st: str):
    low, up = 0, 0
    for el in st:
        if el.isalpha():
            if el.islower():
                low += 1
            else:
                up += 1
    print(f'Количество заглавных символов: {up}')
    print(f'Количество строчных символов: {low}')


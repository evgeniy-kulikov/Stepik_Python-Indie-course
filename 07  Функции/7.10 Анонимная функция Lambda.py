# 7.10 Анонимная функция Lambda
""""""

# lambda arg1, arg1, arg1 ...: возвращаемое значение выражения

# посчитать периметр треугольника
per = lambda a, b, c: a + b + c
per(1, 2, 3)  # 6

#  можно указать анонимную функцию без переменных:
h = lambda: 'hello'
h()  # hello

"""
Lambda заменяет только те функции, которые содержат return. 
После двоеточия указывается значение, которое будет возвращено из lambda функции.
Анонимные функции не могут содержать циклы.

Условный оператор if может быть применен в анонимных функциях, но с ограничением. 
В lambda функции можно реализовать только одностраничник - программу из одной строки. 
Поэтому условный оператор необходимо переписать через тернарный оператор. 
"""

n = lambda x: '+' if x > 0 else '-'

# Lambda функция как ключ сортировки
#  Отсортируем наш список по последней цифре в числе.
a = [72, 4, 39, 100, 200, 5, 28, 123, 44]
a.sort(key=lambda x: x % 10)  # [100, 200, 72, 123, 4, 44, 5, 28, 39]


# решение линейной функции, где внутри функции используется анонимная функция:
def linear(k, b):
    return lambda x: x * k + b

graf1 = linear(2, 5)
graf1(3)  # 11



#
#  *  *  *   Задачи   *  *  *
#


# 01
"""
В переменную adding_10 присвойте lambda функцию, которая принимает одно число и увеличивает его на 10
"""
adding_10 = lambda x: x + 10


# 02
"""
В переменную starts_with присвойте lambda функцию, 
которая принимает строку и возвращает True, когда переданная строка начинается с буквы W. 
Во всех остальных случаях нужно возвращать False
Input:  World
Output: True
"""
starts_with = lambda s: s[0] == 'W'


# 04
"""
Имеется функция sale, которая возвращает цену товара со скидкой 10%.
def sale(x):
    return x*0.9
на основе данной функции создайте анонимную функцию и присвойте её переменной sale_lambda
"""
sale_lambda = lambda x: x * 0.9


# 05
"""
На основе прошлой задачи учесть, что скидка должна быть только для тех товаров, 
стоимость которых больше 50. Внести это изменение в прошлый код
"""
sale_lambda = lambda x: x * 0.9 if x > 50 else x


# 05
"""
Цель: возвести в квадрат два числа и сложить полученные результаты
Внести исправления в код
sq = landba x, y; return x**3 - y*2
"""
sq = lambda x, y: x ** 2 + y ** 2


# 06
"""
Написать lambda функцию, которая принимает произвольное количество числовых аргументов 
и выводит их среднее арифметическое.
Присвоить данную lambda функцию переменной average
"""
average = lambda *args: sum(args) / len(args)
